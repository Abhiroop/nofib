{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface BpGen where
infixl 7 $$
type Dimensions = [Int]
type Eg = ([Double], [Double])
type Egs = [([Double], [Double])]
type Layer = [Double]
type Layers = [[Double]]
type Weight = [[Double]]
type Weights = [[[Double]]]
($$) :: Num a => [a] -> [a] -> [a]
	{-# GHC_PRAGMA _A_ 3 _U_ 111 _N_ _S_ "LSL" _N_ _SPECIALISE_ [ Double ] 1 { _A_ 2 _U_ 11 _N_ _S_ "SL" _N_ _N_ } #-}
backprop :: Double -> [[Double]] -> [[[Double]]] -> [Double] -> [[[Double]]]
	{-# GHC_PRAGMA _A_ 4 _U_ 2222 _N_ _S_ "LSSL" _N_ _N_ #-}
calcchange :: [[Double]] -> [[[Double]]] -> [Double] -> [[Double]]
	{-# GHC_PRAGMA _A_ 3 _U_ 122 _N_ _S_ "SSL" _N_ _N_ #-}
calcerror :: [[[Double]]] -> [([Double], [Double])] -> Double
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _S_ "LS" _N_ _N_ #-}
calcerror1 :: [[[Double]]] -> [([Double], [Double])] -> Double
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _S_ "LS" _N_ _N_ #-}
changeweights :: Double -> [[Double]] -> [[Double]] -> [[[Double]]] -> [[[Double]]]
	{-# GHC_PRAGMA _A_ 4 _U_ 2111 _N_ _S_ "LLLS" _N_ _N_ #-}
classeg :: [[[Double]]] -> [Double] -> [[Double]]
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _S_ "SL" _N_ _N_ #-}
genweights :: [Int] -> [Double] -> [[[Double]]]
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _S_ "SL" _N_ _N_ #-}
maxplace :: Ord a => [a] -> Int
	{-# GHC_PRAGMA _A_ 1 _U_ 22 _N_ _N_ _N_ _N_ #-}
multSplitAt :: Int -> Int -> [a] -> ([[a]], [a])
	{-# GHC_PRAGMA _A_ 3 _U_ 212 _N_ _S_ "LU(P)L" {_A_ 3 _U_ 222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
randweights :: [Int] -> [[[Double]]]
	{-# GHC_PRAGMA _A_ 0 _U_ 1 _N_ _N_ _N_ _N_ #-}
selectegs :: Int -> [Int]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(P)" {_A_ 1 _U_ 2 _N_ _N_ _N_ _N_} _N_ _N_ #-}
sig :: Floating a => a -> a
	{-# GHC_PRAGMA _A_ 1 _U_ 12 _N_ _S_ "U(U(LSAL)ALAAAAAAAAAAAAAAAA)" {_A_ 4 _U_ 21112 _N_ _N_ _N_ _N_} _N_ _SPECIALISE_ [ Double ] 1 { _A_ 1 _U_ 1 _N_ _S_ "U(P)" {_A_ 1 _U_ 2 _N_ _N_ _N_ _N_} _N_ _N_ } #-}
sigop :: [Double] -> [Double] -> [Double]
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "SL" _N_ _N_ #-}
sqr :: Num a => a -> a
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _S_ "U(AAAASAAAAA)L" {_A_ 2 _U_ 12 _N_ _N_ _F_ _IF_ARGS_ 1 2 XX 3 _/\_ u0 -> \ (u1 :: u0 -> u0 -> u0) (u2 :: u0) -> _APP_  u1 [ u2, u2 ] _N_} _F_ _IF_ARGS_ 1 2 CX 4 _/\_ u0 -> \ (u1 :: {{Num u0}}) (u2 :: u0) -> case u1 of { _ALG_ _TUP_10 (u3 :: {{Eq u0}}) (u4 :: {{Text u0}}) (u5 :: u0 -> u0 -> u0) (u6 :: u0 -> u0 -> u0) (u7 :: u0 -> u0 -> u0) (u8 :: u0 -> u0) (u9 :: u0 -> u0) (ua :: u0 -> u0) (ub :: Integer -> u0) (uc :: Int -> u0) -> _APP_  u7 [ u2, u2 ]; _NO_DEFLT_ } _SPECIALISE_ [ Double ] 1 { _A_ 1 _U_ 1 _N_ _S_ "U(P)" {_A_ 1 _U_ 2 _N_ _N_ _F_ _IF_ARGS_ 0 1 X 3 \ (u0 :: Double#) -> case _#_ timesDouble# [] [u0, u0] of { _PRIM_ (u1 :: Double#) -> _!_ D# [] [u1] } _N_} _F_ _IF_ARGS_ 0 1 C 4 \ (u0 :: Double) -> case u0 of { _ALG_ D# (u1 :: Double#) -> case _#_ timesDouble# [] [u1, u1] of { _PRIM_ (u2 :: Double#) -> _!_ D# [] [u2] }; _NO_DEFLT_ } _N_ } #-}
sublist :: Num a => [a] -> [a] -> [a]
	{-# GHC_PRAGMA _A_ 3 _U_ 111 _N_ _S_ "LSL" _N_ _SPECIALISE_ [ Double ] 1 { _A_ 2 _U_ 11 _N_ _S_ "SL" _N_ _N_ } #-}
trainepoch :: [([Double], [Double])] -> [[[Double]]] -> Int -> Double -> [Int] -> ([[[Double]]], [Int])
	{-# GHC_PRAGMA _A_ 5 _U_ 22122 _N_ _S_ "LLU(P)LL" {_A_ 5 _U_ 22222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
trainweights :: [([Double], [Double])] -> [[[Double]]] -> Int -> Double -> Double -> [Int] -> ([[[Double]]], [Double])
	{-# GHC_PRAGMA _A_ 6 _U_ 221222 _N_ _S_ "LLU(P)LLL" _N_ _N_ #-}
weivecmult :: [[Double]] -> [Double] -> [Double]
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _S_ "SL" _N_ _N_ #-}

