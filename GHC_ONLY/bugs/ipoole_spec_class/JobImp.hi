{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface JobImp where
import PreludeIO(Request, Response)
infixl 1 `bindJob`
infixl 1 `bindJobh`
data E a   = Ret a | Fail [Char]
type Exn = [Char]
type Job a b c = (a, [Char]) -> ((E c, (b, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]
type MS = [Char]
bindJob :: ((c, [Char]) -> ((E a, (b, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]) -> (a -> (b, [Char]) -> ((E e, (d, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]) -> (c, [Char]) -> ((E e, (d, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 3 _U_ 12222 _N_ _N_ _N_ _N_ #-}
bindJobh :: ((b, [Char]) -> ((E a, (c, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]) -> (a -> (c, [Char]) -> ((E d, (c, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]) -> (b, [Char]) -> ((E d, (c, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 3 _U_ 12122 _N_ _S_ "SLU(LL)" {_A_ 4 _U_ 122222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
doneJ :: (a, [Char]) -> ((E b, (a, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 2 _U_ 222 _N_ _N_ _N_ _N_ #-}
getChar :: (a, [Char]) -> ((E Char, (a, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 2 _U_ 112 _N_ _S_ "U(LS)S" {_A_ 3 _U_ 2212 _N_ _N_ _N_ _N_} _N_ _N_ #-}
getRest :: (a, [Char]) -> ((E [Char], (a, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 2 _U_ 112 _N_ _S_ "U(LL)S" {_A_ 3 _U_ 2212 _N_ _N_ _N_ _N_} _N_ _N_ #-}
getState :: (a, [Char]) -> ((E a, (a, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 2 _U_ 112 _N_ _S_ "U(LL)S" {_A_ 3 _U_ 2212 _N_ _N_ _N_ _N_} _N_ _N_ #-}
getinputMS :: [Char] -> [Char]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _F_ _IF_ARGS_ 0 1 X 1 \ (u0 :: [Char]) -> u0 _N_ #-}
go :: ((a, [Char]) -> ((E c, (b, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 1 _U_ 22 _N_ _N_ _N_ _N_ #-}
handle :: ((a, [Char]) -> ((E b, (a, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]) -> ([Char] -> (a, [Char]) -> ((E b, (a, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]) -> (a, [Char]) -> ((E b, (a, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 3 _U_ 12222 _N_ _S_ "SLL" _N_ _N_ #-}
iOtoJob :: ((b -> [Response] -> [Request]) -> [Response] -> [Request]) -> (a, [Char]) -> ((E b, (a, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 3 _U_ 1222 _N_ _S_ "SLL" _N_ _N_ #-}
initMS :: [Char]
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 1 _!_ _NIL_ [Char] [] _N_ #-}
jobtoIo :: a -> [Char] -> ((a, [Char]) -> ((E c, (b, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]) -> (c -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 3 _U_ 22122 _N_ _S_ "LLS" _N_ _N_ #-}
performJob :: ((a, [Char]) -> ((E b, (a, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]) -> b
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _N_ _S_ _!_ _F_ _IF_ARGS_ 2 1 X 3 _/\_ u0 u1 -> \ (u2 :: (u0, [Char]) -> ((E u1, (u0, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]) -> _APP_  _TYAPP_  error { (((u0, [Char]) -> ((E u1, (u0, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]) -> u1) } [ _NOREP_S_ "performJob: not implemented!", u2 ] _N_ #-}
processRequestJ :: Request -> (a, [Char]) -> ((E Response, (a, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 1 _U_ 2222 _N_ _N_ _N_ _N_ #-}
raise :: [Char] -> (a, [Char]) -> ((E b, (a, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 3 _U_ 2212 _N_ _S_ "LLS" _N_ _N_ #-}
setState :: b -> (a, [Char]) -> ((E (), (b, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 3 _U_ 2112 _N_ _S_ "LU(AL)S" {_A_ 3 _U_ 2212 _N_ _N_ _N_ _N_} _N_ _N_ #-}
setinputMS :: [Char] -> [Char] -> [Char]
	{-# GHC_PRAGMA _A_ 2 _U_ 01 _N_ _S_ "AS" {_A_ 1 _U_ 1 _N_ _N_ _F_ _IF_ARGS_ 0 1 X 1 \ (u0 :: [Char]) -> u0 _N_} _F_ _IF_ARGS_ 0 2 XX 1 \ (u0 :: [Char]) (u1 :: [Char]) -> u1 _N_ #-}
ungetChar :: Char -> (a, [Char]) -> ((E (), (a, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 3 _U_ 2112 _N_ _S_ "LU(LL)S" {_A_ 4 _U_ 22212 _N_ _N_ _N_ _N_} _N_ _N_ #-}
ungetStr :: [Char] -> (a, [Char]) -> ((E (), (a, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 2 _U_ 1122 _N_ _S_ "LU(LL)" {_A_ 3 _U_ 12212 _N_ _N_ _N_ _N_} _N_ _N_ #-}
unitJob :: b -> (a, [Char]) -> ((E b, (a, [Char])) -> [Response] -> [Request]) -> [Response] -> [Request]
	{-# GHC_PRAGMA _A_ 3 _U_ 2212 _N_ _S_ "LLS" _N_ _N_ #-}

