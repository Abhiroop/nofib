{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface LogFun where
type TT1 = (Int, Int)
type TT2 = (Int, Int, Int, Int)
tt_and2 :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_con10 :: (Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_con11 :: (Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_con20 :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_con21 :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_equ2 :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_id :: (Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_id21 :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_id22 :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_imp :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_imp' :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_inv :: (Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_inv21 :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_inv22 :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_nand2 :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_nimp :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_nimp' :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_nor2 :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_or2 :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
tt_xor :: (Int, Int, Int, Int)
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}

