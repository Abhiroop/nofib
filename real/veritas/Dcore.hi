{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface Dcore where
encode :: Eq a => a -> [a] -> Int
	{-# GHC_PRAGMA _A_ 3 _U_ 121 _N_ _S_ "U(SA)LS" {_A_ 3 _U_ 221 _N_ _N_ _N_ _N_} _N_ _N_ #-}
int_to_str :: Int -> [Char]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(P)" {_A_ 1 _U_ 2 _N_ _N_ _N_ _N_} _N_ _N_ #-}
list_to_str :: (a -> [Char]) -> [a] -> [Char]
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _S_ "LS" _N_ _N_ #-}
str_to_int :: [Int] -> (Int, [Int])
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}
str_to_list :: ([Int] -> (a, [Int])) -> [Int] -> ([a], [Int])
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _S_ "LS" _N_ _N_ #-}

