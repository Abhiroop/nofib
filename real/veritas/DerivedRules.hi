{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface DerivedRules where
import Core_datatype(ITrm, Thm)
conj :: Thm -> Thm -> Thm
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _S_ "SL" _N_ _N_ #-}
conj_thm :: Thm
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
conj_thm_trm :: ITrm
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
disj :: Thm -> Thm -> a -> Thm
	{-# GHC_PRAGMA _A_ 3 _U_ 220 _N_ _S_ "SLA" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
disj_thm :: Thm
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
disj_thm_trm :: ITrm
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
find_betas :: ITrm -> (ITrm, [[Int]])
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _N_ _N_ _N_ _N_ #-}
find_trms :: (Int -> ITrm -> Bool) -> (Int -> ITrm -> ITrm) -> ITrm -> (ITrm, [[Int]])
	{-# GHC_PRAGMA _A_ 3 _U_ 222 _N_ _N_ _N_ _N_ #-}
rep_beta :: Thm -> [[Int]] -> Thm
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _S_ "LS" _F_ _IF_ARGS_ 0 2 XX 4 \ (u0 :: Thm) (u1 :: [[Int]]) -> _APP_  _TYAPP_  _TYAPP_  foldl { Thm } { [Int] } [ _ORIG_ Kernel beta_rw, u0, u1 ] _N_ #-}

