{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface Tacticals where
import Tree(Tree_state)
import Type_defs(Maybe)
infixr 4 `andthen`
infixr 5 `orelse`
andthen :: (a -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), Maybe (Tree_state b c d) [Char], [Char])) -> (Tree_state b c d -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), Maybe (Tree_state b c d) [Char], [Char])) -> a -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), Maybe (Tree_state b c d) [Char], [Char])
	{-# GHC_PRAGMA _A_ 3 _U_ 1222 _N_ _S_ "SLL" _N_ _N_ #-}
for' :: Num a => a -> (Tree_state b c d -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), Maybe (Tree_state b c d) [Char], [Char])) -> Tree_state b c d -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), Maybe (Tree_state b c d) [Char], [Char])
	{-# GHC_PRAGMA _A_ 1 _U_ 12222 _N_ _S_ "U(U(SA)AALAAAAAL)" {_A_ 3 _U_ 2222222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
orelse :: (b -> c -> (d, Maybe e a, [g])) -> (b -> d -> (d, Maybe e f, [g])) -> b -> c -> (d, Maybe e f, [g])
	{-# GHC_PRAGMA _A_ 3 _U_ 1122 _N_ _S_ "SLL" _N_ _N_ #-}
repeat_tac :: (Tree_state a b c -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), Maybe (Tree_state a b c) [Char], [Char])) -> Tree_state a b c -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), Maybe (Tree_state a b c) [Char], [Char])
	{-# GHC_PRAGMA _A_ 2 _U_ 222 _N_ _S_ "SL" _N_ _N_ #-}
subtrst :: (Tree_state a b c -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), Maybe (Tree_state a b c) [Char], [Char])) -> Tree_state a b c -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), Maybe (Tree_state a b c) [Char], [Char])
	{-# GHC_PRAGMA _A_ 2 _U_ 212 _N_ _S_ "LU(U(LSLLL)LL)" {_A_ 4 _U_ 22222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
subtrst' :: Int -> Int -> (Tree_state a b c -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), Maybe (Tree_state a b c) [Char], [Char])) -> Tree_state a b c -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), Maybe (Tree_state a b c) [Char], [Char])
	{-# GHC_PRAGMA _A_ 4 _U_ 11222 _N_ _S_ "U(P)U(P)LL" {_A_ 5 _U_ 22222 _N_ _N_ _N_ _N_} _N_ _N_ #-}

