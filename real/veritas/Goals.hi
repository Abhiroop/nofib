{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface Goals where
import Core_datatype(Attribute_Tag, Attribute_Value, Cnv_Fn, IDec, ISgn, ITrm, Tag_Arg_type, Thm, Trm)
import Kernel(Dec, Sgn)
import Tree(TREE, Tree_state)
import Type_defs(Maybe)
import Vtslib(Option, Sum)
import X_interface(Form_input)
data Done   = TrmDone Trm | ThmDone Thm | SgnDone Sgn | DecDone Dec
data GOAL   = Goal (Option [Char]) (Option [[Char]]) (Option [Char]) [Char] Obj Bool Sgn [[([Char], Option (Sum (Int, Bool) (Int, Int, [(Int, Int)]), (Int, [Char])))]]
data Obj   = TrmSpec ITrm | ThmSpec ITrm | SgnSpec ISgn | DecSpec IDec
default_ds :: [Char]
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
default_ty :: [Char]
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
depth_print_dc :: a -> b -> Sgn -> IDec -> [Char]
	{-# GHC_PRAGMA _A_ 4 _U_ 0022 _N_ _S_ "AASS" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
depth_print_sg :: a -> b -> c -> ISgn -> [Char]
	{-# GHC_PRAGMA _A_ 4 _U_ 0001 _N_ _S_ "AAAS" {_A_ 1 _U_ 1 _N_ _N_ _N_ _N_} _N_ _N_ #-}
depth_print_tm :: a -> b -> Sgn -> ITrm -> [Char]
	{-# GHC_PRAGMA _A_ 4 _U_ 0022 _N_ _S_ "AASL" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
finish :: ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), Maybe a b, [Char])
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _N_ _N_ _N_ _N_ #-}
get_tree :: Option [Char] -> Option [Char] -> Option [Char] -> Option [Char] -> Option [Char] -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), Maybe (Option (Tree_state GOAL a (Int, [(Attribute_Tag, Attribute_Value)], [([Char], [Tag_Arg_type], [Cnv_Fn])]))) [Char], [Char])
	{-# GHC_PRAGMA _A_ 5 _U_ 111112 _N_ _N_ _N_ _N_ #-}
initialize :: Option [Char] -> Option [Char] -> Option [Char] -> Option [Char] -> Option a -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), Maybe (Tree_state GOAL b (Int, [(Attribute_Tag, Attribute_Value)], [([Char], [Tag_Arg_type], [Cnv_Fn])])) [Char], [Char])
	{-# GHC_PRAGMA _A_ 5 _U_ 111112 _N_ _S_ "LLLLS" _N_ _N_ #-}
input_form :: Option [Char] -> Option [Char] -> Option [Char] -> Option [Char] -> Option [Char] -> [Form_input]
	{-# GHC_PRAGMA _A_ 5 _U_ 11111 _N_ _N_ _N_ _N_ #-}
is_done :: Option a -> [Char]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}
my_index :: Eq a => a -> [a] -> Int
	{-# GHC_PRAGMA _A_ 1 _U_ 121 _N_ _N_ _N_ _SPECIALISE_ [ [Char] ] 1 { _A_ 2 _U_ 21 _N_ _S_ "LS" _N_ _N_ } #-}
my_quit :: a -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), Maybe Bool [Char], [Char])
	{-# GHC_PRAGMA _A_ 1 _U_ 02 _N_ _S_ "A" {_A_ 0 _U_ 2 _N_ _N_ _N_ _N_} _N_ _N_ #-}
remove_spaces :: Int -> [Char] -> [Char]
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _S_ "LS" _N_ _N_ #-}
short :: Int -> [Char] -> [Char]
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _N_ _F_ _IF_ARGS_ 0 0 X 1 _ORIG_ Goals short' _N_ #-}
short' :: Int -> [Char] -> [Char]
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "LS" _N_ _N_ #-}
show_done :: Option a -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), [Char])
	{-# GHC_PRAGMA _A_ 1 _U_ 12 _N_ _S_ "S" _F_ _IF_ARGS_ 1 1 C 6 _/\_ u0 -> \ (u1 :: Option u0) -> case u1 of { _ALG_ _ORIG_ Vtslib NONE  -> _APP_  _ORIG_ X_interface x_set_done [ _NOREP_S_ "Incomplete" ]; _ORIG_ Vtslib SOME (u2 :: u0) -> _APP_  _ORIG_ X_interface x_set_done [ _NOREP_S_ "Complete" ]; _NO_DEFLT_ } _N_ #-}
show_goal :: (Int, [(Attribute_Tag, Attribute_Value)], [([Char], [Tag_Arg_type], [Cnv_Fn])]) -> TREE GOAL a b -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), [Char])
	{-# GHC_PRAGMA _A_ 0 _U_ 012 _N_ _N_ _N_ _N_ #-}
show_node :: [Char] -> Obj -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), [Char])
	{-# GHC_PRAGMA _A_ 2 _U_ 212 _N_ _S_ "LS" _N_ _N_ #-}
show_option :: ([Char] -> b) -> (a -> [Char]) -> Option a -> b
	{-# GHC_PRAGMA _A_ 3 _U_ 111 _N_ _S_ "SLS" _N_ _N_ #-}
show_subgoals :: (a, b, c) -> [TREE GOAL d e] -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), [Char])
	{-# GHC_PRAGMA _A_ 2 _U_ 012 _N_ _S_ "AL" {_A_ 1 _U_ 12 _N_ _N_ _N_ _N_} _N_ _N_ #-}
show_summary :: a -> TREE GOAL b c -> ([Char], [Char])
	{-# GHC_PRAGMA _A_ 2 _U_ 01 _N_ _S_ "AU(U(AAAASALA)ALAA)" {_A_ 3 _U_ 121 _N_ _N_ _N_ _N_} _N_ _N_ #-}
summary_depth :: Int
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 2 _!_ I# [] [4#] _N_ #-}
types :: [[Char]]
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
update_state :: Tree_state a b c -> Tree_state GOAL d (Int, [(Attribute_Tag, Attribute_Value)], [([Char], [Tag_Arg_type], [Cnv_Fn])]) -> ([Char], [Int], [Int]) -> (([Char], [Int], [Int]), [Char])
	{-# GHC_PRAGMA _A_ 2 _U_ 112 _N_ _S_ "U(U(AAAAA)AA)U(U(U(LLLLSLLA)LLAA)AA)" {_A_ 3 _U_ 2222 _N_ _N_ _N_ _N_} _N_ _N_ #-}

