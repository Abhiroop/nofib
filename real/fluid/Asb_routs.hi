{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface Asb_routs where
import S_Array(S_array)
add_mat :: S_array Float -> S_array Float -> S_array Float
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _N_ _N_ _N_ #-}
add_u :: (S_array Float, S_array Float) -> (S_array Float, S_array Float) -> (S_array Float, S_array Float)
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _N_ _N_ _N_ #-}
get_asb_table :: Int -> Int -> Int -> S_array [Int] -> S_array [(Int, Int)]
	{-# GHC_PRAGMA _A_ 4 _U_ 2112 _N_ _N_ _N_ _N_ #-}
get_val :: S_array Float -> [Int] -> [Float]
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _S_ "LS" _N_ _N_ #-}
list_inner_prod :: [Float] -> [Float] -> Float
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "SL" _N_ _N_ #-}
list_match_prod :: [Float] -> [Float] -> Float
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "SL" _N_ _N_ #-}
mult :: Num a => a -> a -> a
	{-# GHC_PRAGMA _A_ 1 _U_ 122 _N_ _S_ "U(U(SA)AAALAAAAL)" {_A_ 3 _U_ 11122 _N_ _N_ _N_ _N_} _N_ _SPECIALISE_ [ Float ] 1 { _A_ 2 _U_ 11 _N_ _S_ "LU(P)" {_A_ 2 _U_ 12 _N_ _N_ _N_ _N_} _N_ _N_ } #-}

