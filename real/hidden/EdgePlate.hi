{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface EdgePlate where
import Vectors(Vector)
data Edge 	{-# GHC_PRAGMA Edg Vector Vector #-}
type Input = [[Vector]]
type Object = [Plate]
data Plate   = Plt Int [Edge]
edgeH :: Vector -> Vector -> Edge
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _N_ _F_ _IF_ARGS_ 0 2 XX 3 \ (u0 :: Vector) (u1 :: Vector) -> _!_ _ORIG_ EdgePlate Edg [] [u0, u1] _N_ #-}
edgeT :: Vector -> Vector -> Edge
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _N_ _N_ _N_ #-}
h :: Edge -> Vector
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(AU(L))" {_A_ 1 _U_ 2 _N_ _N_ _F_ _IF_ARGS_ 0 1 X 2 \ (u0 :: [Number]) -> _!_ _ORIG_ Vectors Vec [] [u0] _N_} _F_ _IF_ARGS_ 0 1 C 2 \ (u0 :: Edge) -> case u0 of { _ALG_ _ORIG_ EdgePlate Edg (u1 :: Vector) (u2 :: Vector) -> u2; _NO_DEFLT_ } _N_ #-}
makeObject :: [[Vector]] -> [Plate]
	{-# GHC_PRAGMA _A_ 0 _U_ 2 _N_ _N_ _N_ _N_ #-}
n :: Plate -> Vector
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(AS)" {_A_ 1 _U_ 1 _N_ _N_ _N_ _N_} _N_ _N_ #-}
s :: Edge -> Vector
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(U(L)A)" {_A_ 1 _U_ 2 _N_ _N_ _F_ _IF_ARGS_ 0 1 X 2 \ (u0 :: [Number]) -> _!_ _ORIG_ Vectors Vec [] [u0] _N_} _F_ _IF_ARGS_ 0 1 C 2 \ (u0 :: Edge) -> case u0 of { _ALG_ _ORIG_ EdgePlate Edg (u1 :: Vector) (u2 :: Vector) -> u1; _NO_DEFLT_ } _N_ #-}
t :: Edge -> Vector
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(U(L)U(L))" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}

