{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface EuclidGMS where
import Euclid(Face(..), Faces(..), Halfspace(..), Line, Point(..), Segment(..), convert, drawSegment, mkFace, mkPoint, space, triangleArea)
import Rationals(Rationals)
data Face   = Fc (Point, Point) Line
type Faces = [Face]
data Halfspace   = Fore | Coin | Rear
data Line 	{-# GHC_PRAGMA Ln Rationals Rationals Rationals #-}
data Location   = Coincident | Intersects | ToTheRear | ToTheFore
type Partition = Face
data Point   = Pt Rationals Rationals
data Region 	{-# GHC_PRAGMA Rg [Face] #-}
type Segment = (Point, Point)
bisect :: Face -> Line -> (Face, Face)
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _S_ "U(U(U(U(LU(P))U(LU(P)))L)L)U(U(LU(P))U(LU(P))U(LU(P)))" {_A_ 5 _U_ 22222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
convert :: Point -> Point -> Line
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(LL)U(LL)" {_A_ 4 _U_ 2211 _N_ _N_ _N_ _N_} _N_ _N_ #-}
drawSegment :: (Point, Point) -> [Char]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(U(LL)U(LL))" {_A_ 4 _U_ 1111 _N_ _N_ _N_ _N_} _N_ _N_ #-}
findVertices :: Region -> [Point]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(S)" {_A_ 1 _U_ 2 _N_ _N_ _N_ _N_} _N_ _N_ #-}
flip_YORK :: Face -> Face
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(U(LL)L)" {_A_ 3 _U_ 221 _N_ _N_ _N_ _N_} _N_ _N_ #-}
getPart :: Face -> Line
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(AU(LLL))" {_A_ 3 _U_ 222 _N_ _N_ _F_ _IF_ARGS_ 0 3 XXX 4 \ (u0 :: Rationals) (u1 :: Rationals) (u2 :: Rationals) -> _!_ _ORIG_ Euclid Ln [] [u0, u1, u2] _N_} _F_ _IF_ARGS_ 0 1 C 2 \ (u0 :: Face) -> case u0 of { _ALG_ _ORIG_ Euclid Fc (u1 :: (Point, Point)) (u2 :: Line) -> u2; _NO_DEFLT_ } _N_ #-}
getRegion :: Region -> [Face]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(S)" {_A_ 1 _U_ 1 _N_ _N_ _F_ _IF_ARGS_ 0 1 X 1 \ (u0 :: [Face]) -> u0 _N_} _F_ _IF_ARGS_ 0 1 C 2 \ (u0 :: Region) -> case u0 of { _ALG_ _ORIG_ EuclidGMS Rg (u1 :: [Face]) -> u1; _NO_DEFLT_ } _N_ #-}
inScreen :: Point -> Bool
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(U(U(P)U(P))L)" {_A_ 3 _U_ 221 _N_ _N_ _N_ _N_} _N_ _N_ #-}
location :: Line -> (Point, Point) -> Location
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(U(LU(P))U(LU(P))U(LU(P)))U(U(U(LU(P))U(LU(P)))U(U(LU(P))U(LU(P))))" {_A_ 5 _U_ 22221 _N_ _N_ _N_ _N_} _N_ _N_ #-}
mkFace :: (Point, Point) -> Face
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(LL)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
mkPart :: Region -> Line -> Face
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _N_ _N_ _N_ #-}
mkPoint :: [Char] -> Point
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _N_ _N_ _N_ _N_ #-}
mkRegion :: [Face] -> Region
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _N_ _N_ _F_ _IF_ARGS_ 0 1 X 2 \ (u0 :: [Face]) -> _!_ _ORIG_ EuclidGMS Rg [] [u0] _N_ #-}
newRegion :: Region -> Face -> Region
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _S_ "U(L)L" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
renderBorder :: Region
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
section :: Region -> Line -> (Point, Point)
	{-# GHC_PRAGMA _A_ 0 _U_ 12 _N_ _N_ _N_ _N_ #-}
space :: Line -> Point -> Halfspace
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(U(LU(P))U(LU(P))U(LU(P)))U(U(LU(P))U(LU(P)))" {_A_ 5 _U_ 22111 _N_ _N_ _N_ _N_} _N_ _N_ #-}
toBack :: Point -> Line -> Bool
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(U(LU(P))U(LU(P)))U(U(LU(P))U(LU(P))U(LU(P)))" {_A_ 5 _U_ 22221 _N_ _N_ _N_ _N_} _N_ _N_ #-}
triangleArea :: [Point] -> Rationals
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}
instance Eq Face
	{-# GHC_PRAGMA _M_ Euclid {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(Face -> Face -> Bool), (Face -> Face -> Bool)] [_CONSTM_ Eq (==) (Face), _CONSTM_ Eq (/=) (Face)] _N_
	 (==) = _A_ 2 _U_ 11 _N_ _S_ "U(LL)U(LL)" {_A_ 4 _U_ 2121 _N_ _N_ _N_ _N_} _N_ _N_,
	 (/=) = _A_ 2 _U_ 11 _N_ _S_ "U(LL)U(LL)" {_A_ 4 _U_ 2121 _N_ _N_ _N_ _N_} _N_ _N_ #-}
instance Eq Halfspace
	{-# GHC_PRAGMA _M_ Euclid {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(Halfspace -> Halfspace -> Bool), (Halfspace -> Halfspace -> Bool)] [_CONSTM_ Eq (==) (Halfspace), _CONSTM_ Eq (/=) (Halfspace)] _N_
	 (==) = _A_ 2 _U_ 11 _N_ _S_ "EE" _N_ _N_,
	 (/=) = _A_ 2 _U_ 11 _N_ _S_ "EE" _N_ _N_ #-}
instance Eq Line
	{-# GHC_PRAGMA _M_ Euclid {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(Line -> Line -> Bool), (Line -> Line -> Bool)] [_CONSTM_ Eq (==) (Line), _CONSTM_ Eq (/=) (Line)] _N_
	 (==) = _A_ 2 _U_ 11 _N_ _S_ "U(U(U(P)L)LL)U(U(U(P)L)LL)" {_A_ 5 _U_ 21111 _N_ _N_ _N_ _N_} _N_ _N_,
	 (/=) = _A_ 2 _U_ 11 _N_ _S_ "U(U(U(P)L)LL)U(U(U(P)L)LL)" {_A_ 5 _U_ 21111 _N_ _N_ _N_ _N_} _N_ _N_ #-}
instance Eq Point
	{-# GHC_PRAGMA _M_ Euclid {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(Point -> Point -> Bool), (Point -> Point -> Bool)] [_CONSTM_ Eq (==) (Point), _CONSTM_ Eq (/=) (Point)] _N_
	 (==) = _A_ 2 _U_ 11 _N_ _S_ "U(U(U(P)L)L)U(U(U(P)L)L)" {_A_ 5 _U_ 21111 _N_ _N_ _N_ _N_} _N_ _N_,
	 (/=) = _A_ 2 _U_ 11 _N_ _S_ "U(U(U(P)L)L)U(U(U(P)L)L)" {_A_ 5 _U_ 21111 _N_ _N_ _N_ _N_} _N_ _N_ #-}
instance Eq Location
	{-# GHC_PRAGMA _M_ EuclidGMS {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(Location -> Location -> Bool), (Location -> Location -> Bool)] [_CONSTM_ Eq (==) (Location), _CONSTM_ Eq (/=) (Location)] _N_
	 (==) = _A_ 2 _U_ 11 _N_ _S_ "EE" _N_ _N_,
	 (/=) = _A_ 2 _U_ 11 _N_ _S_ "EE" _N_ _N_ #-}
instance Text Face
	{-# GHC_PRAGMA _M_ Euclid {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 5 _!_ _TUP_4 [(Int -> [Char] -> [(Face, [Char])]), (Int -> Face -> [Char] -> [Char]), ([Char] -> [([Face], [Char])]), ([Face] -> [Char] -> [Char])] [_CONSTM_ Text readsPrec (Face), _CONSTM_ Text showsPrec (Face), _CONSTM_ Text readList (Face), _CONSTM_ Text showList (Face)] _N_
	 readsPrec = _A_ 1 _U_ 12 _N_ _S_ "U(P)" {_A_ 1 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 showsPrec = _A_ 2 _U_ 112 _N_ _S_ "LU(LL)" {_A_ 3 _U_ 1222 _N_ _N_ _N_ _N_} _N_ _N_,
	 readList = _A_ 0 _U_ 2 _N_ _N_ _N_ _N_,
	 showList = _A_ 0 _U_ 12 _N_ _N_ _N_ _N_ #-}
instance Text Halfspace
	{-# GHC_PRAGMA _M_ Euclid {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 5 _!_ _TUP_4 [(Int -> [Char] -> [(Halfspace, [Char])]), (Int -> Halfspace -> [Char] -> [Char]), ([Char] -> [([Halfspace], [Char])]), ([Halfspace] -> [Char] -> [Char])] [_CONSTM_ Text readsPrec (Halfspace), _CONSTM_ Text showsPrec (Halfspace), _CONSTM_ Text readList (Halfspace), _CONSTM_ Text showList (Halfspace)] _N_
	 readsPrec = _A_ 1 _U_ 12 _N_ _S_ "U(P)" {_A_ 1 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 showsPrec = _A_ 2 _U_ 112 _N_ _S_ "LE" _N_ _N_,
	 readList = _A_ 0 _U_ 2 _N_ _N_ _N_ _N_,
	 showList = _A_ 0 _U_ 12 _N_ _N_ _N_ _N_ #-}
instance Text Line
	{-# GHC_PRAGMA _M_ Euclid {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 5 _!_ _TUP_4 [(Int -> [Char] -> [(Line, [Char])]), (Int -> Line -> [Char] -> [Char]), ([Char] -> [([Line], [Char])]), ([Line] -> [Char] -> [Char])] [_CONSTM_ Text readsPrec (Line), _CONSTM_ Text showsPrec (Line), _CONSTM_ Text readList (Line), _CONSTM_ Text showList (Line)] _N_
	 readsPrec = _A_ 1 _U_ 12 _N_ _S_ "U(P)" {_A_ 1 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 showsPrec = _A_ 2 _U_ 112 _N_ _S_ "LU(LLL)" {_A_ 4 _U_ 12222 _N_ _N_ _N_ _N_} _N_ _N_,
	 readList = _A_ 0 _U_ 2 _N_ _N_ _N_ _N_,
	 showList = _A_ 0 _U_ 12 _N_ _N_ _N_ _N_ #-}
instance Text Point
	{-# GHC_PRAGMA _M_ Euclid {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 5 _!_ _TUP_4 [(Int -> [Char] -> [(Point, [Char])]), (Int -> Point -> [Char] -> [Char]), ([Char] -> [([Point], [Char])]), ([Point] -> [Char] -> [Char])] [_CONSTM_ Text readsPrec (Point), _CONSTM_ Text showsPrec (Point), _CONSTM_ Text readList (Point), _CONSTM_ Text showList (Point)] _N_
	 readsPrec = _A_ 1 _U_ 12 _N_ _S_ "U(P)" {_A_ 1 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 showsPrec = _A_ 2 _U_ 112 _N_ _S_ "LU(LL)" {_A_ 3 _U_ 1222 _N_ _N_ _N_ _N_} _N_ _N_,
	 readList = _A_ 0 _U_ 2 _N_ _N_ _N_ _N_,
	 showList = _A_ 0 _U_ 12 _N_ _N_ _N_ _N_ #-}

