{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface MaybeStateT where
import PreludeStdIO(Maybe)
type MST a b = a -> Maybe (b, a)
bindMST :: (b -> Maybe (a, b)) -> (a -> b -> Maybe (c, b)) -> b -> Maybe (c, b)
	{-# GHC_PRAGMA _A_ 3 _U_ 112 _N_ _S_ "SLL" _N_ _N_ #-}
returnMST :: b -> a -> Maybe (b, a)
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _N_ _N_ _N_ #-}
thenMST :: (b -> Maybe (a, b)) -> (a -> b -> Maybe (c, b)) -> b -> Maybe (c, b)
	{-# GHC_PRAGMA _A_ 3 _U_ 112 _N_ _S_ "SLL" _N_ _N_ #-}

