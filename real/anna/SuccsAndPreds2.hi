{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface SuccsAndPreds2 where
import BaseDefs(Domain, Frontier, FrontierElem, Rep, Route)
spGEmb :: Frontier -> [Domain] -> Rep
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _N_ _N_ _N_ #-}
spGEmb_aux :: Frontier -> Domain -> Rep
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _S_ "LS" _N_ _N_ #-}
spGEmb_increase_arity_ignore :: Frontier -> [Domain] -> Rep
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _S_ "LS" _N_ _N_ #-}
spGLift :: Frontier -> [Rep] -> Rep
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _N_ _F_ _IF_ARGS_ 0 2 XX 3 \ (u0 :: Frontier) (u1 :: [Rep]) -> _!_ _ORIG_ BaseDefs Rep1 [] [u0, u1] _N_ #-}
spLEmb :: [Rep] -> Frontier -> Rep
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _N_ _F_ _IF_ARGS_ 0 2 XX 3 \ (u0 :: [Rep]) (u1 :: Frontier) -> _!_ _ORIG_ BaseDefs Rep1 [] [u1, u0] _N_ #-}
spLLift :: [Route] -> [Domain] -> [Domain] -> [Rep] -> Rep
	{-# GHC_PRAGMA _A_ 4 _U_ 2212 _N_ _N_ _N_ _N_ #-}
spLLift_aux :: Int -> [Route] -> [Domain] -> Domain -> Rep -> Rep
	{-# GHC_PRAGMA _A_ 5 _U_ 12212 _N_ _S_ "U(P)LLSS" {_A_ 5 _U_ 22212 _N_ _N_ _N_ _N_} _N_ _N_ #-}
spLLift_reduce_arity_as_top :: Int -> [Route] -> [Domain] -> Rep -> Rep
	{-# GHC_PRAGMA _A_ 4 _U_ 1221 _N_ _S_ "U(P)LLS" {_A_ 4 _U_ 2221 _N_ _N_ _N_ _N_} _N_ _N_ #-}
spMax0FromMin1 :: [Domain] -> [FrontierElem] -> [FrontierElem]
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _N_ _N_ _N_ #-}
spMax0FromMin1_aux :: [Route] -> [Domain] -> [FrontierElem] -> [FrontierElem]
	{-# GHC_PRAGMA _A_ 3 _U_ 221 _N_ _N_ _N_ _N_ #-}
spMin1FromMax0 :: [Domain] -> [FrontierElem] -> [FrontierElem]
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _N_ _N_ _N_ #-}
spMin1FromMax0_aux :: [Route] -> [Domain] -> [FrontierElem] -> [FrontierElem]
	{-# GHC_PRAGMA _A_ 3 _U_ 221 _N_ _N_ _N_ _N_ #-}
spPreds :: (Domain, Route) -> [(Domain, Route)]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(SS)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
spPredsFrel :: [Domain] -> FrontierElem -> [FrontierElem]
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _S_ "SU(S)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
spPredsR :: Domain -> Route -> [Route]
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
spPredsRep :: Domain -> Rep -> [Rep]
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "SS" _N_ _N_ #-}
spSuccs :: (Domain, Route) -> [(Domain, Route)]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(SS)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
spSuccsFrel :: [Domain] -> FrontierElem -> [FrontierElem]
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _S_ "SU(S)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
spSuccsR :: Domain -> Route -> [Route]
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
spSuccsRep :: Domain -> Rep -> [Rep]
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "SS" _N_ _N_ #-}

