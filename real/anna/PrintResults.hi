{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface PrintResults where
import BaseDefs(ConstrElem, DExpr, Domain, Flag, Route)
prAllPoints :: Domain -> [Char]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _N_ _N_ _N_ #-}
prCross :: [[Int]] -> [[Int]] -> [[Int]]
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _S_ "SL" _N_ _N_ #-}
prCrossList :: [[[Int]]] -> [[Int]]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}
prLift :: [[Int]] -> [[Int]]
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _N_ _N_ _N_ _N_ #-}
prLiftsIn :: Domain -> Int
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}
prPrintFunction :: Bool -> ([([Char], DExpr)], [([Char], Domain)], [([Char], [ConstrElem])], [([Char], [[Char]])], [Flag], (Int, Int, Int, Int, Int), [(Domain, Int)]) -> [Char] -> (Domain, Route) -> [Char]
	{-# GHC_PRAGMA _A_ 0 _U_ 2121 _N_ _N_ _N_ _N_ #-}
prRoute :: Domain -> Route -> [Char]
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _S_ "SS" _N_ _N_ #-}
prRouteMain :: Domain -> Route -> [Int]
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _N_ _N_ _N_ #-}
prRouteMain_cross :: [Domain] -> [Route] -> [Int]
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _N_ _N_ _N_ #-}
prSucc :: Int -> Int -> Int
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(P)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _F_ _IF_ARGS_ 0 2 XX 3 \ (u0 :: Int#) (u1 :: Int#) -> case _#_ plusInt# [] [u0, u1] of { _PRIM_ (u2 :: Int#) -> _!_ I# [] [u2] } _N_} _F_ _IF_ARGS_ 0 2 CC 5 \ (u0 :: Int) (u1 :: Int) -> case u0 of { _ALG_ I# (u2 :: Int#) -> case u1 of { _ALG_ I# (u3 :: Int#) -> case _#_ plusInt# [] [u2, u3] of { _PRIM_ (u4 :: Int#) -> _!_ I# [] [u4] }; _NO_DEFLT_ }; _NO_DEFLT_ } _N_ #-}
prWidth :: Domain -> Int
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}

