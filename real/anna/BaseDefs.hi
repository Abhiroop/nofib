{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface BaseDefs where
data ACMode   = Safe | Live
type AList a b = [(a, b)]
data ATree a b   = ALeaf | ABranch (ATree a b) a b (ATree a b) Int
type Alter = ([[Char]], CExprP [Char])
type AlterP a = ([a], CExprP a)
type AnnAlt a b = ([Char], ([a], (b, AnnExpr' a b)))
type AnnDefn a b = (a, (b, AnnExpr' a b))
type AnnExpr a b = (b, AnnExpr' a b)
data AnnExpr' a b   = AVar [Char] | ANum Int | AConstr [Char] | AAp (b, AnnExpr' a b) (b, AnnExpr' a b) | ALet Bool [(a, (b, AnnExpr' a b))] (b, AnnExpr' a b) | ACase (b, AnnExpr' a b) [([Char], ([a], (b, AnnExpr' a b)))] | ALam [a] (b, AnnExpr' a b)
type AnnProgram a b = [([Char], [a], (b, AnnExpr' a b))]
data AppInfo   = A2 | ALo1 | AHi1 Int Int Domain | ALo2 | AMid2 | AHi2 Int Int Domain
type AtomicProgram = ([([Char], [[Char]], [([Char], [TDefExpr])])], CExprP [Char])
type Bag a = [a]
type CExpr = CExprP [Char]
data CExprP a   = EVar [Char] | ENum Int | EConstr [Char] | EAp (CExprP a) (CExprP a) | ELet Bool [(a, CExprP a)] (CExprP a) | ECase (CExprP a) [([Char], ([a], CExprP a))] | ELam [a] (CExprP a)
type ConstrAlt = ([Char], [TDefExpr])
data ConstrElem   = ConstrRec | ConstrVar Int
type CoreProgram = ([([Char], [[Char]], [([Char], [TDefExpr])])], [([Char], ([[Char]], CExprP [Char]))])
type CoreProgramP a = ([([Char], [[Char]], [([Char], [TDefExpr])])], [([Char], ([a], CExprP a))])
data DExpr   = DXTwo | DXLift1 [DExpr] | DXLift2 [DExpr] | DXFunc [DExpr] DExpr | DXVar [Char]
type DExprEnv = [([Char], DExpr)]
type DInt = (Domain, Int)
type DRRSubst = [([Char], (Domain, Route, Route))]
type DSubst = [([Char], Domain)]
type DefnGroup a = [(Bool, [a])]
data Domain   = Two | Lift1 [Domain] | Lift2 [Domain] | Func [Domain] Domain
type DomainInt = ExceptionInt Domain
data Eqn   = EqnNVC [Char] (Set [Char]) (Set [Char])
data ExceptionInt a   = MkExInt Int [a]
data Flag   = Typecheck | Simp | NoCaseOpt | ShowHExpr | NoPretty | NoFormat | NoBaraki | SimpleInv | PolyLim Int | MonoLim Int | ForceAll | DryRun | LowerLim Int | UpperLim Int | ScaleUp Int
data Frontier   = Min1Max0 Int [FrontierElem] [FrontierElem]
data FrontierElem   = MkFrel [Route]
data HExpr a   = HApp (HExpr a) (HExpr a) | HVAp (HExpr a) [HExpr a] | HLam [a] (HExpr a) | HVar a | HMeet [HExpr a] | HPoint Route | HTable [(Route, HExpr a)]
type Iseq = (Int -> Int -> [Char]) -> Int -> Int -> [Char]
data Maybe a   = Nothing | Just a
type MemoList = [([Route], Route)]
type Message = [Char]
type Naam = [Char]
type NameSupply = Int
type OneFuncSize = (Int, [Domain])
type Oseq = Int -> Int -> [Char]
data PResult a   = PFail [(Int, [Char])] | POk a [(Int, [Char])]
type Parser a = [(Int, [Char])] -> PResult a
data PartialExpr   = NoOp | FoundOp [Char] (CExprP [Char])
type Point = (Domain, Route)
type PrDomain = [[Int]]
type PrPoint = [Int]
type RSubst = [([Char], Route)]
data Rep   = RepTwo Frontier | Rep1 Frontier [Rep] | Rep2 Frontier Frontier [Rep]
data Reply a b   = Ok a | Fail b
data Route   = Zero | One | Stop1 | Up1 [Route] | Stop2 | Up2 | UpUp2 [Route] | Rep Rep
data SAInfo   = SAResult [Char] Domain Route | SASearch ACMode [Char] Int Int | SASizes [Char] [(Int, [Domain])] [(Int, [Domain])] | SAHExpr [Char] (HExpr [Char]) | SASL [Route] [Route] | SAGiveUp [[Char]]
type ST a b = b -> (a, b)
type ScValue = ([[Char]], CExprP [Char])
type ScValueP a = ([a], CExprP a)
type Sequence = ([[(Int, [Domain])]], [[(Int, [Domain])]])
data Set a   = MkSet [a]
type StaticComponent = ([([Char], DExpr)], [([Char], Domain)], [([Char], [ConstrElem])], [([Char], [[Char]])], [Flag], (Int, Int, Int, Int, Int), [(Domain, Int)])
type Subst = [(([Int], [Int]), TExpr)]
data TDefExpr   = TDefVar [Char] | TDefCons [Char] [TDefExpr]
data TExpr   = TVar ([Int], [Int]) | TArr TExpr TExpr | TCons [Char] [TExpr]
type TVName = ([Int], [Int])
type TcTypeEnv = [([Char], TypeScheme)]
type Token = (Int, [Char])
type TypeDef = ([Char], [[Char]], [([Char], [TDefExpr])])
type TypeDependancy = [(Bool, [[Char]])]
type TypeEnv = [([Char], TExpr)]
type TypeInfo = ([(([Int], [Int]), TExpr)], TExpr, (TExpr, AnnExpr' [Char] TExpr))
type TypeNameSupply = ([Int], [Int])
data TypeScheme   = Scheme [([Int], [Int])] TExpr
bdDefaultSettings :: [Flag]
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
bdDryRunSettings :: [Flag]
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
instance Eq ACMode
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(ACMode -> ACMode -> Bool), (ACMode -> ACMode -> Bool)] [_CONSTM_ Eq (==) (ACMode), _CONSTM_ Eq (/=) (ACMode)] _N_
	 (==) = _A_ 2 _U_ 11 _N_ _S_ "EE" _N_ _N_,
	 (/=) = _A_ 2 _U_ 11 _N_ _S_ "EE" _N_ _N_ #-}
instance (Eq a, Eq b) => Eq (ATree a b)
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 2 _U_ 11 _N_ _N_ _N_ _N_ #-}
instance (Eq a, Eq b) => Eq (AnnExpr' a b)
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 2 _U_ 22 _N_ _N_ _N_ _N_ #-}
instance Eq AppInfo
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(AppInfo -> AppInfo -> Bool), (AppInfo -> AppInfo -> Bool)] [_CONSTM_ Eq (==) (AppInfo), _CONSTM_ Eq (/=) (AppInfo)] _N_
	 (==) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (/=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
instance Eq a => Eq (CExprP a)
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 1 _U_ 2 _N_ _N_ _N_ _N_ #-}
instance Eq ConstrElem
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(ConstrElem -> ConstrElem -> Bool), (ConstrElem -> ConstrElem -> Bool)] [_CONSTM_ Eq (==) (ConstrElem), _CONSTM_ Eq (/=) (ConstrElem)] _N_
	 (==) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (/=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
instance Eq DExpr
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(DExpr -> DExpr -> Bool), (DExpr -> DExpr -> Bool)] [_CONSTM_ Eq (==) (DExpr), _CONSTM_ Eq (/=) (DExpr)] _N_
	 (==) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (/=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
instance Eq Domain
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(Domain -> Domain -> Bool), (Domain -> Domain -> Bool)] [_CONSTM_ Eq (==) (Domain), _CONSTM_ Eq (/=) (Domain)] _N_
	 (==) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (/=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
instance Eq Eqn
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(Eqn -> Eqn -> Bool), (Eqn -> Eqn -> Bool)] [_CONSTM_ Eq (==) (Eqn), _CONSTM_ Eq (/=) (Eqn)] _N_
	 (==) = _A_ 2 _U_ 11 _N_ _S_ "U(SLL)U(SLL)" {_A_ 4 _U_ 2221 _N_ _N_ _N_ _N_} _N_ _N_,
	 (/=) = _A_ 2 _U_ 11 _N_ _S_ "U(SLL)U(SLL)" {_A_ 4 _U_ 2221 _N_ _N_ _N_ _N_} _N_ _N_ #-}
instance Eq a => Eq (ExceptionInt a)
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 1 _U_ 2 _N_ _N_ _N_ _N_ #-}
instance Eq Flag
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(Flag -> Flag -> Bool), (Flag -> Flag -> Bool)] [_CONSTM_ Eq (==) (Flag), _CONSTM_ Eq (/=) (Flag)] _N_
	 (==) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (/=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
instance Eq Frontier
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(Frontier -> Frontier -> Bool), (Frontier -> Frontier -> Bool)] [_CONSTM_ Eq (==) (Frontier), _CONSTM_ Eq (/=) (Frontier)] _N_
	 (==) = _A_ 2 _U_ 11 _N_ _S_ "U(U(P)LL)U(U(P)LL)" {_A_ 4 _U_ 2221 _N_ _N_ _N_ _N_} _N_ _N_,
	 (/=) = _A_ 2 _U_ 11 _N_ _S_ "U(U(P)LL)U(U(P)LL)" {_A_ 4 _U_ 2221 _N_ _N_ _N_ _N_} _N_ _N_ #-}
instance Eq FrontierElem
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(FrontierElem -> FrontierElem -> Bool), (FrontierElem -> FrontierElem -> Bool)] [_CONSTM_ Eq (==) (FrontierElem), _CONSTM_ Eq (/=) (FrontierElem)] _N_
	 (==) = _A_ 2 _U_ 11 _N_ _S_ "U(L)U(L)" {_A_ 0 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 (/=) = _A_ 2 _U_ 11 _N_ _S_ "U(L)U(L)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
instance Eq a => Eq (HExpr a)
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 1 _U_ 2 _N_ _N_ _N_ _N_ #-}
instance Eq a => Eq (Maybe a)
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 1 _U_ 1 _N_ _N_ _N_ _N_ #-}
instance Eq a => Eq (PResult a)
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 1 _U_ 1 _N_ _N_ _N_ _N_ #-}
instance Eq PartialExpr
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(PartialExpr -> PartialExpr -> Bool), (PartialExpr -> PartialExpr -> Bool)] [_CONSTM_ Eq (==) (PartialExpr), _CONSTM_ Eq (/=) (PartialExpr)] _N_
	 (==) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (/=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
instance Eq Rep
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(Rep -> Rep -> Bool), (Rep -> Rep -> Bool)] [_CONSTM_ Eq (==) (Rep), _CONSTM_ Eq (/=) (Rep)] _N_
	 (==) = _A_ 2 _U_ 11 _N_ _S_ "SS" _N_ _N_,
	 (/=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
instance (Eq a, Eq b) => Eq (Reply a b)
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 2 _U_ 11 _N_ _N_ _N_ _N_ #-}
instance Eq Route
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(Route -> Route -> Bool), (Route -> Route -> Bool)] [_CONSTM_ Eq (==) (Route), _CONSTM_ Eq (/=) (Route)] _N_
	 (==) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (/=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
instance Eq a => Eq (Set a)
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 1 _U_ 2 _N_ _N_ _N_ _N_ #-}
instance Eq TDefExpr
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(TDefExpr -> TDefExpr -> Bool), (TDefExpr -> TDefExpr -> Bool)] [_CONSTM_ Eq (==) (TDefExpr), _CONSTM_ Eq (/=) (TDefExpr)] _N_
	 (==) = _A_ 2 _U_ 11 _N_ _S_ "SS" _N_ _N_,
	 (/=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
instance Eq TExpr
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(TExpr -> TExpr -> Bool), (TExpr -> TExpr -> Bool)] [_CONSTM_ Eq (==) (TExpr), _CONSTM_ Eq (/=) (TExpr)] _N_
	 (==) = _A_ 2 _U_ 11 _N_ _S_ "SS" _N_ _N_,
	 (/=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
instance Eq TypeScheme
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(TypeScheme -> TypeScheme -> Bool), (TypeScheme -> TypeScheme -> Bool)] [_CONSTM_ Eq (==) (TypeScheme), _CONSTM_ Eq (/=) (TypeScheme)] _N_
	 (==) = _A_ 2 _U_ 11 _N_ _S_ "U(LL)U(LL)" {_A_ 4 _U_ 2121 _N_ _N_ _N_ _N_} _N_ _N_,
	 (/=) = _A_ 2 _U_ 11 _N_ _S_ "U(LL)U(LL)" {_A_ 4 _U_ 2121 _N_ _N_ _N_ _N_} _N_ _N_ #-}
instance (Text a, Ord a) => Num (ExceptionInt a)
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 4 _U_ 0022 _N_ _N_ _N_ _N_ #-}
instance Ord ConstrElem
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 9 _!_ _TUP_8 [{{Eq ConstrElem}}, (ConstrElem -> ConstrElem -> Bool), (ConstrElem -> ConstrElem -> Bool), (ConstrElem -> ConstrElem -> Bool), (ConstrElem -> ConstrElem -> Bool), (ConstrElem -> ConstrElem -> ConstrElem), (ConstrElem -> ConstrElem -> ConstrElem), (ConstrElem -> ConstrElem -> _CMP_TAG)] [_DFUN_ Eq (ConstrElem), _CONSTM_ Ord (<) (ConstrElem), _CONSTM_ Ord (<=) (ConstrElem), _CONSTM_ Ord (>=) (ConstrElem), _CONSTM_ Ord (>) (ConstrElem), _CONSTM_ Ord max (ConstrElem), _CONSTM_ Ord min (ConstrElem), _CONSTM_ Ord _tagCmp (ConstrElem)] _N_
	 (<) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (<=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (>=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (>) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 max = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 min = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 _tagCmp = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
instance Ord Domain
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 9 _!_ _TUP_8 [{{Eq Domain}}, (Domain -> Domain -> Bool), (Domain -> Domain -> Bool), (Domain -> Domain -> Bool), (Domain -> Domain -> Bool), (Domain -> Domain -> Domain), (Domain -> Domain -> Domain), (Domain -> Domain -> _CMP_TAG)] [_DFUN_ Eq (Domain), _CONSTM_ Ord (<) (Domain), _CONSTM_ Ord (<=) (Domain), _CONSTM_ Ord (>=) (Domain), _CONSTM_ Ord (>) (Domain), _CONSTM_ Ord max (Domain), _CONSTM_ Ord min (Domain), _CONSTM_ Ord _tagCmp (Domain)] _N_
	 (<) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (<=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (>=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (>) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 max = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 min = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 _tagCmp = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
instance Ord a => Ord (ExceptionInt a)
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 2 _U_ 22 _N_ _N_ _N_ _N_ #-}
instance Ord Frontier
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 9 _!_ _TUP_8 [{{Eq Frontier}}, (Frontier -> Frontier -> Bool), (Frontier -> Frontier -> Bool), (Frontier -> Frontier -> Bool), (Frontier -> Frontier -> Bool), (Frontier -> Frontier -> Frontier), (Frontier -> Frontier -> Frontier), (Frontier -> Frontier -> _CMP_TAG)] [_DFUN_ Eq (Frontier), _CONSTM_ Ord (<) (Frontier), _CONSTM_ Ord (<=) (Frontier), _CONSTM_ Ord (>=) (Frontier), _CONSTM_ Ord (>) (Frontier), _CONSTM_ Ord max (Frontier), _CONSTM_ Ord min (Frontier), _CONSTM_ Ord _tagCmp (Frontier)] _N_
	 (<) = _A_ 2 _U_ 11 _N_ _S_ "U(U(P)LL)U(U(P)LL)" {_A_ 4 _U_ 2221 _N_ _N_ _N_ _N_} _N_ _N_,
	 (<=) = _A_ 2 _U_ 11 _N_ _S_ "U(U(P)LL)U(U(P)LL)" {_A_ 4 _U_ 2221 _N_ _N_ _N_ _N_} _N_ _N_,
	 (>=) = _A_ 2 _U_ 11 _N_ _S_ "U(U(P)LL)U(U(P)LL)" {_A_ 4 _U_ 2221 _N_ _N_ _N_ _N_} _N_ _N_,
	 (>) = _A_ 2 _U_ 11 _N_ _S_ "U(U(P)LL)U(U(P)LL)" {_A_ 4 _U_ 2221 _N_ _N_ _N_ _N_} _N_ _N_,
	 max = _A_ 2 _U_ 12 _N_ _S_ "U(U(P)LL)U(U(P)LL)" {_A_ 4 _U_ 2222 _N_ _N_ _N_ _N_} _N_ _N_,
	 min = _A_ 2 _U_ 12 _N_ _S_ "U(U(P)LL)U(U(P)LL)" {_A_ 4 _U_ 2222 _N_ _N_ _N_ _N_} _N_ _N_,
	 _tagCmp = _A_ 2 _U_ 11 _N_ _S_ "U(U(P)LL)U(U(P)LL)" {_A_ 4 _U_ 2221 _N_ _N_ _N_ _N_} _N_ _N_ #-}
instance Ord FrontierElem
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 9 _!_ _TUP_8 [{{Eq FrontierElem}}, (FrontierElem -> FrontierElem -> Bool), (FrontierElem -> FrontierElem -> Bool), (FrontierElem -> FrontierElem -> Bool), (FrontierElem -> FrontierElem -> Bool), (FrontierElem -> FrontierElem -> FrontierElem), (FrontierElem -> FrontierElem -> FrontierElem), (FrontierElem -> FrontierElem -> _CMP_TAG)] [_DFUN_ Eq (FrontierElem), _CONSTM_ Ord (<) (FrontierElem), _CONSTM_ Ord (<=) (FrontierElem), _CONSTM_ Ord (>=) (FrontierElem), _CONSTM_ Ord (>) (FrontierElem), _CONSTM_ Ord max (FrontierElem), _CONSTM_ Ord min (FrontierElem), _CONSTM_ Ord _tagCmp (FrontierElem)] _N_
	 (<) = _A_ 2 _U_ 11 _N_ _S_ "U(L)U(L)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 (<=) = _A_ 2 _U_ 11 _N_ _S_ "U(L)U(L)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 (>=) = _A_ 2 _U_ 11 _N_ _S_ "U(L)U(L)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 (>) = _A_ 2 _U_ 11 _N_ _S_ "U(L)U(L)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 max = _A_ 2 _U_ 11 _N_ _S_ "U(L)U(L)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 min = _A_ 2 _U_ 11 _N_ _S_ "U(L)U(L)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 _tagCmp = _A_ 2 _U_ 11 _N_ _S_ "U(L)U(L)" {_A_ 0 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
instance Ord Rep
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 9 _!_ _TUP_8 [{{Eq Rep}}, (Rep -> Rep -> Bool), (Rep -> Rep -> Bool), (Rep -> Rep -> Bool), (Rep -> Rep -> Bool), (Rep -> Rep -> Rep), (Rep -> Rep -> Rep), (Rep -> Rep -> _CMP_TAG)] [_DFUN_ Eq (Rep), _CONSTM_ Ord (<) (Rep), _CONSTM_ Ord (<=) (Rep), _CONSTM_ Ord (>=) (Rep), _CONSTM_ Ord (>) (Rep), _CONSTM_ Ord max (Rep), _CONSTM_ Ord min (Rep), _CONSTM_ Ord _tagCmp (Rep)] _N_
	 (<) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (<=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (>=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (>) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 max = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 min = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 _tagCmp = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
instance Ord Route
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 9 _!_ _TUP_8 [{{Eq Route}}, (Route -> Route -> Bool), (Route -> Route -> Bool), (Route -> Route -> Bool), (Route -> Route -> Bool), (Route -> Route -> Route), (Route -> Route -> Route), (Route -> Route -> _CMP_TAG)] [_DFUN_ Eq (Route), _CONSTM_ Ord (<) (Route), _CONSTM_ Ord (<=) (Route), _CONSTM_ Ord (>=) (Route), _CONSTM_ Ord (>) (Route), _CONSTM_ Ord max (Route), _CONSTM_ Ord min (Route), _CONSTM_ Ord _tagCmp (Route)] _N_
	 (<) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (<=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (>=) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 (>) = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 max = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 min = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_,
	 _tagCmp = _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
instance Text ConstrElem
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 5 _!_ _TUP_4 [(Int -> [Char] -> [(ConstrElem, [Char])]), (Int -> ConstrElem -> [Char] -> [Char]), ([Char] -> [([ConstrElem], [Char])]), ([ConstrElem] -> [Char] -> [Char])] [_CONSTM_ Text readsPrec (ConstrElem), _CONSTM_ Text showsPrec (ConstrElem), _CONSTM_ Text readList (ConstrElem), _CONSTM_ Text showList (ConstrElem)] _N_
	 readsPrec = _A_ 1 _U_ 12 _N_ _S_ "U(P)" {_A_ 1 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 showsPrec = _A_ 2 _U_ 112 _N_ _S_ "LS" _N_ _N_,
	 readList = _A_ 0 _U_ 2 _N_ _N_ _N_ _N_,
	 showList = _A_ 0 _U_ 12 _N_ _N_ _N_ _N_ #-}
instance Text Domain
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 5 _!_ _TUP_4 [(Int -> [Char] -> [(Domain, [Char])]), (Int -> Domain -> [Char] -> [Char]), ([Char] -> [([Domain], [Char])]), ([Domain] -> [Char] -> [Char])] [_CONSTM_ Text readsPrec (Domain), _CONSTM_ Text showsPrec (Domain), _CONSTM_ Text readList (Domain), _CONSTM_ Text showList (Domain)] _N_
	 readsPrec = _A_ 1 _U_ 12 _N_ _S_ "U(P)" {_A_ 1 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 showsPrec = _A_ 2 _U_ 112 _N_ _S_ "LS" _N_ _N_,
	 readList = _A_ 0 _U_ 2 _N_ _N_ _N_ _N_,
	 showList = _A_ 0 _U_ 12 _N_ _N_ _N_ _N_ #-}
instance Text a => Text (ExceptionInt a)
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 1 _U_ 2 _N_ _N_ _N_ _N_ #-}
instance Text Frontier
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 5 _!_ _TUP_4 [(Int -> [Char] -> [(Frontier, [Char])]), (Int -> Frontier -> [Char] -> [Char]), ([Char] -> [([Frontier], [Char])]), ([Frontier] -> [Char] -> [Char])] [_CONSTM_ Text readsPrec (Frontier), _CONSTM_ Text showsPrec (Frontier), _CONSTM_ Text readList (Frontier), _CONSTM_ Text showList (Frontier)] _N_
	 readsPrec = _A_ 1 _U_ 12 _N_ _S_ "U(P)" {_A_ 1 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 showsPrec = _A_ 2 _U_ 112 _N_ _S_ "LU(LLL)" {_A_ 4 _U_ 12222 _N_ _N_ _N_ _N_} _N_ _N_,
	 readList = _A_ 0 _U_ 2 _N_ _N_ _N_ _N_,
	 showList = _A_ 0 _U_ 12 _N_ _N_ _N_ _N_ #-}
instance Text FrontierElem
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 5 _!_ _TUP_4 [(Int -> [Char] -> [(FrontierElem, [Char])]), (Int -> FrontierElem -> [Char] -> [Char]), ([Char] -> [([FrontierElem], [Char])]), ([FrontierElem] -> [Char] -> [Char])] [_CONSTM_ Text readsPrec (FrontierElem), _CONSTM_ Text showsPrec (FrontierElem), _CONSTM_ Text readList (FrontierElem), _CONSTM_ Text showList (FrontierElem)] _N_
	 readsPrec = _A_ 1 _U_ 12 _N_ _S_ "U(P)" {_A_ 1 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 showsPrec = _A_ 2 _U_ 212 _N_ _S_ "LU(L)" {_A_ 2 _U_ 122 _N_ _N_ _N_ _N_} _N_ _N_,
	 readList = _A_ 0 _U_ 2 _N_ _N_ _N_ _N_,
	 showList = _A_ 0 _U_ 12 _N_ _N_ _N_ _N_ #-}
instance Text a => Text (HExpr a)
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 1 _U_ 2 _N_ _N_ _N_ _N_ #-}
instance Text Rep
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 5 _!_ _TUP_4 [(Int -> [Char] -> [(Rep, [Char])]), (Int -> Rep -> [Char] -> [Char]), ([Char] -> [([Rep], [Char])]), ([Rep] -> [Char] -> [Char])] [_CONSTM_ Text readsPrec (Rep), _CONSTM_ Text showsPrec (Rep), _CONSTM_ Text readList (Rep), _CONSTM_ Text showList (Rep)] _N_
	 readsPrec = _A_ 1 _U_ 12 _N_ _S_ "U(P)" {_A_ 1 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 showsPrec = _A_ 2 _U_ 112 _N_ _S_ "LS" _N_ _N_,
	 readList = _A_ 0 _U_ 2 _N_ _N_ _N_ _N_,
	 showList = _A_ 0 _U_ 12 _N_ _N_ _N_ _N_ #-}
instance Text Route
	{-# GHC_PRAGMA _M_ BaseDefs {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 5 _!_ _TUP_4 [(Int -> [Char] -> [(Route, [Char])]), (Int -> Route -> [Char] -> [Char]), ([Char] -> [([Route], [Char])]), ([Route] -> [Char] -> [Char])] [_CONSTM_ Text readsPrec (Route), _CONSTM_ Text showsPrec (Route), _CONSTM_ Text readList (Route), _CONSTM_ Text showList (Route)] _N_
	 readsPrec = _A_ 1 _U_ 12 _N_ _S_ "U(P)" {_A_ 1 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_,
	 showsPrec = _A_ 2 _U_ 112 _N_ _S_ "LS" _N_ _N_,
	 readList = _A_ 0 _U_ 2 _N_ _N_ _N_ _N_,
	 showList = _A_ 0 _U_ 12 _N_ _N_ _N_ _N_ #-}

