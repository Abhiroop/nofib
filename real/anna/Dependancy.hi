{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface Dependancy where
import BaseDefs(AnnExpr', CExprP, Set)
deBindersOf :: [(b, a)] -> [b]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}
deDependancy :: CExprP [Char] -> CExprP [Char]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}
deDepends :: Ord a => (Set a, AnnExpr' a (Set a)) -> CExprP a
	{-# GHC_PRAGMA _A_ 1 _U_ 22 _N_ _N_ _N_ _SPECIALISE_ [ [Char] ] 1 { _A_ 0 _U_ 1 _N_ _N_ _N_ _N_ } #-}
deDepthFirstSearch :: Ord a => (a -> [a]) -> (Set a, [a]) -> [a] -> (Set a, [a])
	{-# GHC_PRAGMA _A_ 1 _U_ 2211 _N_ _N_ _N_ _SPECIALISE_ [ [Char] ] 1 { _A_ 3 _U_ 211 _N_ _N_ _N_ _N_ } #-}
deElet :: Ord a => Bool -> [(a, (Set a, AnnExpr' a (Set a)))] -> CExprP a -> CExprP a
	{-# GHC_PRAGMA _A_ 1 _U_ 2222 _N_ _N_ _N_ _N_ #-}
deFreeVars :: CExprP [Char] -> (Set [Char], AnnExpr' [Char] (Set [Char]))
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}
deFreeVarsOf :: (Set [Char], AnnExpr' [Char] (Set [Char])) -> Set [Char]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(U(L)A)" {_A_ 1 _U_ 2 _N_ _N_ _F_ _IF_ARGS_ 0 1 X 2 \ (u0 :: [[Char]]) -> _!_ _ORIG_ BaseDefs MkSet [[Char]] [u0] _N_} _F_ _IF_ARGS_ 0 1 C 2 \ (u0 :: (Set [Char], AnnExpr' [Char] (Set [Char]))) -> case u0 of { _ALG_ _TUP_2 (u1 :: Set [Char]) (u2 :: AnnExpr' [Char] (Set [Char])) -> u1; _NO_DEFLT_ } _N_ #-}
deScc :: Ord a => (a -> [a]) -> (a -> [a]) -> [a] -> [Set a]
	{-# GHC_PRAGMA _A_ 1 _U_ 2221 _N_ _N_ _N_ _SPECIALISE_ [ [Char] ] 1 { _A_ 3 _U_ 221 _N_ _N_ _N_ _N_ } #-}
deSpanningSearch :: Ord a => (a -> [a]) -> (Set a, [Set a]) -> [a] -> (Set a, [Set a])
	{-# GHC_PRAGMA _A_ 1 _U_ 2211 _N_ _N_ _N_ _SPECIALISE_ [ [Char] ] 1 { _A_ 0 _U_ 211 _N_ _N_ _N_ _N_ } #-}
deValuesOf :: [(a, b)] -> [b]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}

