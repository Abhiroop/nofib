{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface FrontierMisc2 where
import BaseDefs(Domain, Frontier, FrontierElem, Maybe, Rep)
fmIsNothing :: Maybe a -> Bool
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _F_ _IF_ARGS_ 1 1 C 4 _/\_ u0 -> \ (u1 :: Maybe u0) -> case u1 of { _ALG_ _ORIG_ BaseDefs Nothing  -> _!_ True [] []; _ORIG_ BaseDefs Just (u2 :: u0) -> _!_ False [] []; _NO_DEFLT_ } _N_ #-}
fmMaxIntersection :: [FrontierElem] -> [FrontierElem] -> [FrontierElem]
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _S_ "SL" _N_ _N_ #-}
fmMinIntersection :: [FrontierElem] -> [FrontierElem] -> [FrontierElem]
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _S_ "SL" _N_ _N_ #-}
fmReviseMaxYY :: [Domain] -> [FrontierElem] -> FrontierElem -> [FrontierElem]
	{-# GHC_PRAGMA _A_ 3 _U_ 222 _N_ _S_ "LSL" _N_ _N_ #-}
fmReviseMinXX :: [Domain] -> [FrontierElem] -> FrontierElem -> [FrontierElem]
	{-# GHC_PRAGMA _A_ 3 _U_ 222 _N_ _S_ "LSL" _N_ _N_ #-}
fmSelect :: Int -> [FrontierElem] -> [FrontierElem] -> Bool -> Maybe FrontierElem
	{-# GHC_PRAGMA _A_ 4 _U_ 1121 _N_ _N_ _N_ _N_ #-}
fsZULB :: Rep -> Rep -> Rep
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "SS" _N_ _N_ #-}
fsZULB_2 :: Frontier -> Frontier -> Frontier
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(LAL)U(ALA)" {_A_ 3 _U_ 222 _N_ _N_ _F_ _IF_ARGS_ 0 3 XXX 4 \ (u0 :: Int) (u1 :: [FrontierElem]) (u2 :: [FrontierElem]) -> _!_ _ORIG_ BaseDefs Min1Max0 [] [u0, u2, u1] _N_} _F_ _IF_ARGS_ 0 2 CC 6 \ (u0 :: Frontier) (u1 :: Frontier) -> case u0 of { _ALG_ _ORIG_ BaseDefs Min1Max0 (u2 :: Int) (u3 :: [FrontierElem]) (u4 :: [FrontierElem]) -> case u1 of { _ALG_ _ORIG_ BaseDefs Min1Max0 (u5 :: Int) (u6 :: [FrontierElem]) (u7 :: [FrontierElem]) -> _!_ _ORIG_ BaseDefs Min1Max0 [] [u2, u6, u4]; _NO_DEFLT_ }; _NO_DEFLT_ } _N_ #-}

