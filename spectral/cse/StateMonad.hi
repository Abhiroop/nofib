{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface StateMonad where
type SM a b = a -> (a, b)
bind :: (b -> (b, a)) -> (a -> b -> (b, c)) -> b -> (b, c)
	{-# GHC_PRAGMA _A_ 3 _U_ 112 _N_ _S_ "LSL" _N_ _N_ #-}
fetch :: a -> (a, a)
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _N_ _N_ _F_ _IF_ARGS_ 1 1 X 3 _/\_ u0 -> \ (u1 :: u0) -> _!_ _TUP_2 [u0, u0] [u1, u1] _N_ #-}
fetchWith :: (a -> b) -> a -> (a, b)
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _N_ _N_ _N_ #-}
incr :: Int -> (Int, Int)
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _N_ _N_ _N_ _N_ #-}
join :: (a -> (a, a -> (a, b))) -> a -> (a, b)
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _S_ "SL" _F_ _IF_ARGS_ 2 2 XX 5 _/\_ u0 u1 -> \ (u2 :: u0 -> (u0, u0 -> (u0, u1))) (u3 :: u0) -> case _APP_  u2 [ u3 ] of { _ALG_ _TUP_2 (u4 :: u0) (u5 :: u0 -> (u0, u1)) -> _APP_  u5 [ u4 ]; _NO_DEFLT_ } _N_ #-}
mfoldl :: (c -> a -> b -> (b, c)) -> c -> [a] -> b -> (b, c)
	{-# GHC_PRAGMA _A_ 3 _U_ 2212 _N_ _S_ "LLS" _N_ _N_ #-}
mfoldr :: (a -> c -> b -> (b, c)) -> c -> [a] -> b -> (b, c)
	{-# GHC_PRAGMA _A_ 3 _U_ 2212 _N_ _S_ "LLS" _N_ _N_ #-}
mif :: (a -> (a, Bool)) -> (a -> (a, b)) -> (a -> (a, b)) -> a -> (a, b)
	{-# GHC_PRAGMA _A_ 3 _U_ 1112 _N_ _N_ _N_ _N_ #-}
mmap :: (a -> c) -> (b -> (b, a)) -> b -> (b, c)
	{-# GHC_PRAGMA _A_ 3 _U_ 112 _N_ _N_ _N_ _N_ #-}
mmapl :: (a -> b -> (b, c)) -> [a] -> b -> (b, [c])
	{-# GHC_PRAGMA _A_ 2 _U_ 212 _N_ _S_ "LS" _N_ _N_ #-}
mmapr :: (a -> b -> (b, c)) -> [a] -> b -> (b, [c])
	{-# GHC_PRAGMA _A_ 2 _U_ 212 _N_ _S_ "LS" _N_ _N_ #-}
return :: b -> a -> (a, b)
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _N_ _F_ _IF_ARGS_ 2 2 XX 3 _/\_ u0 u1 -> \ (u2 :: u1) (u3 :: u0) -> _!_ _TUP_2 [u0, u1] [u3, u2] _N_ #-}
set :: a -> a -> (a, a)
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _N_ _F_ _IF_ARGS_ 1 2 XX 3 _/\_ u0 -> \ (u1 :: u0) (u2 :: u0) -> _!_ _TUP_2 [u0, u0] [u1, u2] _N_ #-}
startingWith :: (a -> (a, b)) -> a -> b
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _S_ "SL" _F_ _IF_ARGS_ 2 2 XX 4 _/\_ u0 u1 -> \ (u2 :: u0 -> (u0, u1)) (u3 :: u0) -> case _APP_  u2 [ u3 ] of { _ALG_ _TUP_2 (u4 :: u0) (u5 :: u1) -> u5; _NO_DEFLT_ } _N_ #-}
update :: (a -> a) -> a -> (a, a)
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _N_ _N_ _N_ #-}

