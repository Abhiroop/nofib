interface Word where
infixl 7 `bitAnd`
infixl 8 `bitLsh`
infixl 5 `bitOr`
infixl 8 `bitRsh`
infixl 6 `bitXor`
byteToInt :: Byte -> Int {-# ARITY _ = 1 #-}
shortToInt :: Short -> Int {-# ARITY _ = 1 #-}
wordToInt :: Word -> Int {-# ARITY _ = 1 #-}
class Bits a where
    bitAnd :: a -> a -> a
    bitOr :: a -> a -> a
    bitXor :: a -> a -> a
    bitCompl :: a -> a
    bitRsh :: a -> Int -> a
    bitLsh :: a -> Int -> a
    bitSwap :: a -> a
    bit0 :: a
    bitSize :: a -> Int
data Byte 
data Short 
data Word 
instance Eq Byte
instance Eq Short
instance Eq Word
instance Num Word
instance Ord Byte
instance Ord Short
instance Ord Word
instance Text Word
instance Bits Word
