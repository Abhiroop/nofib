{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface Game where
import Board(Evaluation, Piece)
import Tree(Tree)
type Move = ([[Piece]], Evaluation)
type Player = Evaluation -> Evaluation -> Evaluation
alternate :: Piece -> (Evaluation -> Evaluation -> Evaluation) -> (Evaluation -> Evaluation -> Evaluation) -> [[Piece]] -> [([[Piece]], Evaluation)]
	{-# GHC_PRAGMA _A_ 4 _U_ 2222 _N_ _S_ "LLLS" _N_ _N_ #-}
best :: (Evaluation -> Evaluation -> Evaluation) -> [[[Piece]]] -> [Evaluation] -> ([[Piece]], Evaluation)
	{-# GHC_PRAGMA _A_ 3 _U_ 211 _N_ _S_ "LSS" _N_ _N_ #-}
bestMove :: Piece -> (Evaluation -> Evaluation -> Evaluation) -> (Evaluation -> Evaluation -> Evaluation) -> [[Piece]] -> Evaluation
	{-# GHC_PRAGMA _A_ 3 _U_ 2222 _N_ _N_ _N_ _N_ #-}
cropTree :: Tree Evaluation -> Tree Evaluation
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(LS)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
max' :: Evaluation -> Evaluation -> Evaluation
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _S_ "SL" _N_ _N_ #-}
min' :: Evaluation -> Evaluation -> Evaluation
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _S_ "SL" _N_ _N_ #-}
mise :: (Evaluation -> Evaluation -> Evaluation) -> (Evaluation -> Evaluation -> Evaluation) -> Tree Evaluation -> Evaluation
	{-# GHC_PRAGMA _A_ 3 _U_ 221 _N_ _S_ "LLU(LS)" {_A_ 4 _U_ 2211 _N_ _N_ _N_ _N_} _N_ _N_ #-}
opposite :: Piece -> Piece
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "E" _N_ _N_ #-}
searchTree :: Piece -> [[Piece]] -> Tree [[Piece]]
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _N_ _N_ _N_ #-}
showMove :: ([[Piece]], Evaluation) -> [Char]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(LL)" {_A_ 2 _U_ 12 _N_ _N_ _N_ _N_} _N_ _N_ #-}

