{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface KnightHeuristic where
import ChessSetList(ChessSet)
data ChessSet 	{-# GHC_PRAGMA Board Int Int (Int, Int) [(Int, Int)] #-}
descendents :: ChessSet -> [ChessSet]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(LLU(U(P)L)L)" {_A_ 5 _U_ 22222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
startTour :: (Int, Int) -> Int -> ChessSet
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _S_ "LU(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
tourFinished :: ChessSet -> Bool
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(U(P)U(P)LL)" {_A_ 4 _U_ 2212 _N_ _N_ _N_ _N_} _N_ _N_ #-}
instance Eq ChessSet
	{-# GHC_PRAGMA _M_ ChessSetList {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 3 _!_ _TUP_2 [(ChessSet -> ChessSet -> Bool), (ChessSet -> ChessSet -> Bool)] [_CONSTM_ Eq (==) (ChessSet), _CONSTM_ Eq (/=) (ChessSet)] _N_
	 (==) = _A_ 2 _U_ 00 _N_ _S_ "AA" {_A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 1 _!_ True [] [] _N_} _F_ _IF_ARGS_ 0 2 XX 1 \ (u0 :: ChessSet) (u1 :: ChessSet) -> _!_ True [] [] _N_,
	 (/=) = _A_ 2 _U_ 22 _N_ _N_ _N_ _N_ #-}
instance Ord ChessSet
	{-# GHC_PRAGMA _M_ ChessSetList {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 9 _!_ _TUP_8 [{{Eq ChessSet}}, (ChessSet -> ChessSet -> Bool), (ChessSet -> ChessSet -> Bool), (ChessSet -> ChessSet -> Bool), (ChessSet -> ChessSet -> Bool), (ChessSet -> ChessSet -> ChessSet), (ChessSet -> ChessSet -> ChessSet), (ChessSet -> ChessSet -> _CMP_TAG)] [_DFUN_ Eq (ChessSet), _CONSTM_ Ord (<) (ChessSet), _CONSTM_ Ord (<=) (ChessSet), _CONSTM_ Ord (>=) (ChessSet), _CONSTM_ Ord (>) (ChessSet), _CONSTM_ Ord max (ChessSet), _CONSTM_ Ord min (ChessSet), _CONSTM_ Ord _tagCmp (ChessSet)] _N_
	 (<) = _A_ 2 _U_ 22 _N_ _N_ _N_ _N_,
	 (<=) = _A_ 2 _U_ 00 _N_ _S_ "AA" {_A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 1 _!_ True [] [] _N_} _F_ _IF_ARGS_ 0 2 XX 1 \ (u0 :: ChessSet) (u1 :: ChessSet) -> _!_ True [] [] _N_,
	 (>=) = _A_ 2 _U_ 00 _N_ _S_ "AA" {_A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 1 _!_ True [] [] _N_} _F_ _IF_ARGS_ 0 2 XX 1 \ (u0 :: ChessSet) (u1 :: ChessSet) -> _!_ True [] [] _N_,
	 (>) = _A_ 2 _U_ 22 _N_ _N_ _N_ _N_,
	 max = _A_ 2 _U_ 22 _N_ _N_ _N_ _N_,
	 min = _A_ 2 _U_ 22 _N_ _N_ _N_ _N_,
	 _tagCmp = _A_ 2 _U_ 22 _N_ _N_ _N_ _N_ #-}
instance Text ChessSet
	{-# GHC_PRAGMA _M_ ChessSetList {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 5 _!_ _TUP_4 [(Int -> [Char] -> [(ChessSet, [Char])]), (Int -> ChessSet -> [Char] -> [Char]), ([Char] -> [([ChessSet], [Char])]), ([ChessSet] -> [Char] -> [Char])] [_CONSTM_ Text readsPrec (ChessSet), _CONSTM_ Text showsPrec (ChessSet), _CONSTM_ Text readList (ChessSet), _CONSTM_ Text showList (ChessSet)] _N_
	 readsPrec = _A_ 2 _U_ 22 _N_ _S_ _!_ _F_ _IF_ARGS_ 0 2 XX 4 \ (u0 :: Int) (u1 :: [Char]) -> _APP_  _TYAPP_  patError# { (Int -> [Char] -> [(ChessSet, [Char])]) } [ _NOREP_S_ "%DPreludeCore.Text.readsPrec\"", u0, u1 ] _N_,
	 showsPrec = _A_ 2 _U_ 012 _N_ _S_ "AU(U(P)LAL)" {_A_ 3 _U_ 2212 _N_ _N_ _N_ _N_} _N_ _N_,
	 readList = _A_ 0 _U_ 2 _N_ _N_ _N_ _N_,
	 showList = _A_ 0 _U_ 12 _N_ _N_ _N_ _N_ #-}

